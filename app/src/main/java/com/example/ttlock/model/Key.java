package com.example.ttlock.model;

import android.os.Parcel;
import android.os.Parcelable;

import org.greenrobot.greendao.annotation.Entity;
import org.greenrobot.greendao.annotation.Generated;
import org.greenrobot.greendao.annotation.Id;

/**
 * Created by Administrator on 2016/9/6 0006.
 */
@Entity
public class Key implements Parcelable {

    @Id
    private Long id;

    /**
     * access token
     */
    private String accessToken;

    /**
     * key status
     * "110401"	Normal use
     * "110402"	To be received
     * "110405"	Frozen
     * "110408"	deleted
     * "110410"	Reset
     */
    private String keyStatus;

    /**
     * lock id
     */
    private int lockId;

    /**
     * key id
     */
    private int keyId;

    /**
     * judge whether it is an administrator
     */
    private boolean isAdmin;

    /**
     * lock version information(json format)
     */
    private String lockVersion;

    /**
     * lock name
     */
    private String lockName;

    /**
     * lock alias
     */
    private String lockAlias;

    /**
     * lock mac
     */
    private String lockMac;

    /**
     * battery
     */
    private int battery;

    /**
     * lock flag position
     */
    private int lockFlagPos;

    /**
     *  admin code, which only belongs to the admin ekey, will be used to verify the admin permission.
     *
     */
    private String adminPs;

    /**
     * The key data which will be used to unlock
     */
    private String unlockKey;

    /**
     * Super passcode, which only belongs to the admin ekey, can be entered on the keypad to unlock
     */
    private String adminKeyboardPwd;

    /**
     * Erasing passcode,which belongs to old locks, has been abandoned. Please don't use it.
     */
    private String deletePwd;

    /**
     * Initial data of passcode, which is generated by SDK, is used to create passcode
     */
    private String pwdInfo;

    /**
     * The timestamp which is generated by SDK during lock initializing time
     */
    private long timestamp;

    /**
     * aesKey
     */
    private String aesKeystr;

    /**
     * The time when it becomes valid
     */
    private long startDate;

    /**
     * The time when it is expired
     */
    private long endDate;

    /**
     * characteristic value. it is used to indicate what kinds of feature do a lock support.
     */
    private int specialValue;

    /**
     * The offset between your time zone and UTC, in millisecond
     */
    private int timezoneRawOffset;

    /**
     * Product model
     */
    private String modelNumber;

    /**
     * Hardware version
     */
    private String hardwareRevision;
    
    /**
     * Firmware version
     */
    String firmwareRevision;

    @Generated(hash = 124450289)
    public Key(Long id, String accessToken, String keyStatus, int lockId, int keyId, boolean isAdmin, String lockVersion, String lockName,
            String lockAlias, String lockMac, int battery, int lockFlagPos, String adminPs, String unlockKey, String adminKeyboardPwd, String deletePwd,
            String pwdInfo, long timestamp, String aesKeystr, long startDate, long endDate, int specialValue, int timezoneRawOffset, String modelNumber,
            String hardwareRevision, String firmwareRevision) {
        this.id = id;
        this.accessToken = accessToken;
        this.keyStatus = keyStatus;
        this.lockId = lockId;
        this.keyId = keyId;
        this.isAdmin = isAdmin;
        this.lockVersion = lockVersion;
        this.lockName = lockName;
        this.lockAlias = lockAlias;
        this.lockMac = lockMac;
        this.battery = battery;
        this.lockFlagPos = lockFlagPos;
        this.adminPs = adminPs;
        this.unlockKey = unlockKey;
        this.adminKeyboardPwd = adminKeyboardPwd;
        this.deletePwd = deletePwd;
        this.pwdInfo = pwdInfo;
        this.timestamp = timestamp;
        this.aesKeystr = aesKeystr;
        this.startDate = startDate;
        this.endDate = endDate;
        this.specialValue = specialValue;
        this.timezoneRawOffset = timezoneRawOffset;
        this.modelNumber = modelNumber;
        this.hardwareRevision = hardwareRevision;
        this.firmwareRevision = firmwareRevision;
    }

    @Generated(hash = 2076226027)
    public Key() {
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public int getLockId() {
        return this.lockId;
    }

    public void setLockId(int lockId) {
        this.lockId = lockId;
    }

    public String getLockVersion() {
        return this.lockVersion;
    }

    public void setLockVersion(String lockVersion) {
        this.lockVersion = lockVersion;
    }

    public String getAdminPs() {
        return this.adminPs;
    }

    public void setAdminPs(String adminPs) {
        this.adminPs = adminPs;
    }

    public String getUnlockKey() {
        return this.unlockKey;
    }

    public void setUnlockKey(String unlockKey) {
        this.unlockKey = unlockKey;
    }

    public String getAdminKeyboardPwd() {
        return this.adminKeyboardPwd;
    }

    public void setAdminKeyboardPwd(String adminKeyboardPwd) {
        this.adminKeyboardPwd = adminKeyboardPwd;
    }

    public String getDeletePwd() {
        return this.deletePwd;
    }

    public void setDeletePwd(String deletePwd) {
        this.deletePwd = deletePwd;
    }

    public String getPwdInfo() {
        return this.pwdInfo;
    }

    public void setPwdInfo(String pwdInfo) {
        this.pwdInfo = pwdInfo;
    }

    public long getTimestamp() {
        return this.timestamp;
    }

    public void setTimestamp(long timestamp) {
        this.timestamp = timestamp;
    }

    public String getAesKeystr() {
        return this.aesKeystr;
    }

    public void setAesKeystr(String aesKeystr) {
        this.aesKeystr = aesKeystr;
    }

    public String getLockName() {
        return this.lockName;
    }

    public void setLockName(String lockName) {
        this.lockName = lockName;
    }

    public String getLockMac() {
        return this.lockMac;
    }

    public void setLockMac(String lockMac) {
        this.lockMac = lockMac;
    }

    public int getLockFlagPos() {
        return this.lockFlagPos;
    }

    public void setLockFlagPos(int lockFlagPos) {
        this.lockFlagPos = lockFlagPos;
    }

    public int getKeyId() {
        return this.keyId;
    }

    public void setKeyId(int keyId) {
        this.keyId = keyId;
    }

    public boolean isAdmin() {
        return this.isAdmin;
    }

    public void setAdmin(boolean isAdmin) {
        this.isAdmin = isAdmin;
    }

    @Override
    public String toString() {
        return "Key{" +
                "id=" + id +
                ", lockId=" + lockId +
                ", keyId=" + keyId +
                ", isAdmin=" + isAdmin +
                ", lockVersion='" + lockVersion + '\'' +
                ", lockName='" + lockName + '\'' +
                ", lockMac='" + lockMac + '\'' +
                ", lockFlagPos=" + lockFlagPos +
                ", adminPs='" + adminPs + '\'' +
                ", unlockKey='" + unlockKey + '\'' +
                ", adminKeyboardPwd='" + adminKeyboardPwd + '\'' +
                ", deletePwd='" + deletePwd + '\'' +
                ", pwdInfo='" + pwdInfo + '\'' +
                ", timestamp=" + timestamp +
                ", aesKeystr='" + aesKeystr + '\'' +
                '}';
    }

    public boolean getIsAdmin() {
        return this.isAdmin;
    }

    public int getBattery() {
        return this.battery;
    }

    public void setBattery(int battery) {
        this.battery = battery;
    }

    public String getAccessToken() {
        return this.accessToken;
    }

    public void setAccessToken(String accessToken) {
        this.accessToken = accessToken;
    }

    public void setIsAdmin(boolean isAdmin) {
        this.isAdmin = isAdmin;
    }

    public long getStartDate() {
        return this.startDate;
    }

    public void setStartDate(long startDate) {
        this.startDate = startDate;
    }

    public long getEndDate() {
        return this.endDate;
    }

    public void setEndDate(long endDate) {
        this.endDate = endDate;
    }

    public int getSpecialValue() {
        return this.specialValue;
    }

    public void setSpecialValue(int specialValue) {
        this.specialValue = specialValue;
    }

    public int getTimezoneRawOffset() {
        return this.timezoneRawOffset;
    }

    public void setTimezoneRawOffset(int timezoneRawOffset) {
        this.timezoneRawOffset = timezoneRawOffset;
    }

    public String getModelNumber() {
        return this.modelNumber;
    }

    public void setModelNumber(String modelNumber) {
        this.modelNumber = modelNumber;
    }

    public String getHardwareRevision() {
        return this.hardwareRevision;
    }

    public void setHardwareRevision(String hardwareRevision) {
        this.hardwareRevision = hardwareRevision;
    }

    public String getFirmwareRevision() {
        return this.firmwareRevision;
    }

    public void setFirmwareRevision(String firmwareRevision) {
        this.firmwareRevision = firmwareRevision;
    }

    public String getLockAlias() {
        return this.lockAlias;
    }

    public void setLockAlias(String lockAlias) {
        this.lockAlias = lockAlias;
    }

    public String getKeyStatus() {
        return this.keyStatus;
    }

    public void setKeyStatus(String keyStatus) {
        this.keyStatus = keyStatus;
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeValue(this.id);
        dest.writeString(this.accessToken);
        dest.writeString(this.keyStatus);
        dest.writeInt(this.lockId);
        dest.writeInt(this.keyId);
        dest.writeByte(this.isAdmin ? (byte) 1 : (byte) 0);
        dest.writeString(this.lockVersion);
        dest.writeString(this.lockName);
        dest.writeString(this.lockAlias);
        dest.writeString(this.lockMac);
        dest.writeInt(this.battery);
        dest.writeInt(this.lockFlagPos);
        dest.writeString(this.adminPs);
        dest.writeString(this.unlockKey);
        dest.writeString(this.adminKeyboardPwd);
        dest.writeString(this.deletePwd);
        dest.writeString(this.pwdInfo);
        dest.writeLong(this.timestamp);
        dest.writeString(this.aesKeystr);
        dest.writeLong(this.startDate);
        dest.writeLong(this.endDate);
        dest.writeInt(this.specialValue);
        dest.writeInt(this.timezoneRawOffset);
        dest.writeString(this.modelNumber);
        dest.writeString(this.hardwareRevision);
        dest.writeString(this.firmwareRevision);
    }

    protected Key(Parcel in) {
        this.id = (Long) in.readValue(Long.class.getClassLoader());
        this.accessToken = in.readString();
        this.keyStatus = in.readString();
        this.lockId = in.readInt();
        this.keyId = in.readInt();
        this.isAdmin = in.readByte() != 0;
        this.lockVersion = in.readString();
        this.lockName = in.readString();
        this.lockAlias = in.readString();
        this.lockMac = in.readString();
        this.battery = in.readInt();
        this.lockFlagPos = in.readInt();
        this.adminPs = in.readString();
        this.unlockKey = in.readString();
        this.adminKeyboardPwd = in.readString();
        this.deletePwd = in.readString();
        this.pwdInfo = in.readString();
        this.timestamp = in.readLong();
        this.aesKeystr = in.readString();
        this.startDate = in.readLong();
        this.endDate = in.readLong();
        this.specialValue = in.readInt();
        this.timezoneRawOffset = in.readInt();
        this.modelNumber = in.readString();
        this.hardwareRevision = in.readString();
        this.firmwareRevision = in.readString();
    }

    public static final Parcelable.Creator<Key> CREATOR = new Parcelable.Creator<Key>() {
        @Override
        public Key createFromParcel(Parcel source) {
            return new Key(source);
        }

        @Override
        public Key[] newArray(int size) {
            return new Key[size];
        }
    };
}
